# auto_push.ps1

# –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ —Å–∫—Ä–∏–ø—Ç–∞
Set-Location -Path $PSScriptRoot

# –£–¥–∞–ª–∏—Ç—å .pyc –∏ __pycache__
Get-ChildItem -Recurse -Include __pycache__,*.pyc | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
$gitStatus = git status --porcelain
if (-not $gitStatus) {
  Write-Host "‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞. –ó–∞–≤–µ—Ä—à–µ–Ω–æ." -ForegroundColor Green
  exit
}

# –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
$now = Get-Date -Format "yyyy-MM-dd HH:mm:ss"

# Dummy update –≤–æ –≤—Å–µ .py —Ñ–∞–π–ª—ã (–∫—Ä–æ–º–µ –º–∏–≥—Ä–∞—Ü–∏–π –∏ venv)
$files = Get-ChildItem -Recurse -Include *.py | Where-Object {
  $_.FullName -notmatch "\\migrations\\" -and $_.FullName -notmatch "\\venv\\"
}

foreach ($file in $files) {
  Add-Content -Path $file.FullName -Value "`n# updated $now" -Encoding utf8
}

# –î–æ–±–∞–≤–∏—Ç—å –≤ git
git add .

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
Write-Host "üìÑ –ò–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:" -ForegroundColor Cyan
git diff --cached --name-only | ForEach-Object { Write-Host "‚Ä¢ $_" }

# –°–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç
git commit -m "Auto commit with dummy update $now"

# –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ GitHub –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
git push origin main

Write-Host "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ GitHub ($now)" -ForegroundColor Green
